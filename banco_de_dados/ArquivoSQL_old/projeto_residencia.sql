-- MySQL Script generated by MySQL Workbench
-- Thu Sep 25 18:01:23 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema projeto_residencia
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema projeto_residencia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `projeto_residencia` DEFAULT CHARACTER SET utf8 ;
USE `projeto_residencia` ;

-- -----------------------------------------------------
-- Table `projeto_residencia`.`Aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projeto_residencia`.`Aluno` (
  `idAluno` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `idade` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  `escolaridade` VARCHAR(45) NOT NULL,
  `data_cadastro` DATE NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (`idAluno`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `projeto_residencia`.`Professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projeto_residencia`.`Professor` (
  `idProfessor` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(45) NOT NULL,
  `data_cadastro` DATE NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (`idProfessor`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `projeto_residencia`.`Provas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projeto_residencia`.`Provas` (
  `idProvas` INT NOT NULL AUTO_INCREMENT,
  `materia` VARCHAR(45) NOT NULL,
  `numero_questoes` INT NOT NULL,
  `conteudo` VARCHAR(45) NOT NULL,
  `serie_destinada` VARCHAR(45) NOT NULL,
  `data_criacao` VARCHAR(45) NOT NULL DEFAULT 'CURRENT_TIMESTAMP()',
  `Professor_idProfessor` INT NOT NULL,
  PRIMARY KEY (`idProvas`),
  INDEX `fk_Provas_Professor_idx` (`Professor_idProfessor` ASC),
  CONSTRAINT `fk_Provas_Professor`
    FOREIGN KEY (`Professor_idProfessor`)
    REFERENCES `projeto_residencia`.`Professor` (`idProfessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `projeto_residencia`.`Aluno_Provas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projeto_residencia`.`Aluno_Provas` (
  `idRegistro_prova` INT NOT NULL AUTO_INCREMENT,
  `Aluno_idAluno` INT NOT NULL,
  `Provas_idProvas` INT NOT NULL,
  `nota` DECIMAL(5,2) NOT NULL,
  `data_realizacao` DATE NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  `status` ENUM('pendente', 'realizada', 'corrigida') NOT NULL DEFAULT 'pendente',
  `observacoes` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`idRegistro_prova`, `Aluno_idAluno`, `Provas_idProvas`),
  INDEX `fk_Aluno_has_Provas_Provas1_idx` (`Provas_idProvas` ASC),
  INDEX `fk_Aluno_has_Provas_Aluno1_idx` (`Aluno_idAluno` ASC),
  CONSTRAINT `fk_Aluno_has_Provas_Aluno1`
    FOREIGN KEY (`Aluno_idAluno`)
    REFERENCES `projeto_residencia`.`Aluno` (`idAluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_has_Provas_Provas1`
    FOREIGN KEY (`Provas_idProvas`)
    REFERENCES `projeto_residencia`.`Provas` (`idProvas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;